[General]
network = LTECell
image-path=../../images
tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=15s
warmup-period=0.5s # Excludes first x seconds from statistic computation.
repeat = 1
**.routingRecorder.enabled = false

# Statistics.
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = false
#record-eventlog = true
#eventlog-file = ${resultdir}/lastrun.elog
#cmdenv-express-mode = false
#cmdenv-output-file = ${resultdir}/lastrun.log

# Channel.
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

# Phyiscal layer.
**.nic.phy.channelModel=xmldoc("config_channel_no_effects.xml")
**.feedbackComputation = xmldoc("config_channel_no_effects.xml")

# Mobility.
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
# Feedback delay.
**.fbDelay = 1
# Adaptive Modulation and Coding (AMC) Module.
**.rbAllocationType = "localized"
**.deployer.numRbDl = 2
**.deployer.numRbUl = 2
**.numBands = 2
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"
#**.schedulingDisciplineDl = "PF"
#**.schedulingDisciplineUl = "PF"

[Config TCPApps]
extends=OneD2DPair

# TCP.
**.tcpType = "TCP"
**.tcp.tcpAlgorithmClass = "TCPNewReno"
**.tcp.windowScalingSupport = true
**.tcpApp[*].dataTransferMode = "object"
**.tcp.mss = 1460
**.tcp.advertisedWindow = 1460000

*.ueD2D*[0].numTcpApps = 1

# Transmitter.
*.ueD2DTx[0].tcpApp[0].typename = "TCPBasicClientApp"
*.ueD2DTx[0].tcpApp[0].requestLength = 500B
*.ueD2DTx[0].tcpApp[0].replyLength = 500B
*.ueD2DTx[0].tcpApp[0].idleInterval = exponential(1s)
*.ueD2DTx[0].tcpApp[0].connectAddress = "ueD2DRx[0]"
*.ueD2DTx[0].tcpApp[0].connectPort = 1000
*.ueD2DTx[0].tcpApp[0].thinkTime = 0s

# Receiver
*.ueD2DRx[0].tcpApp[*].typename = "TCPGenericSrvApp"
*.ueD2DRx[0].tcpApp[*].localPort = 1000
**.tcpApp[*].tClose = -1s


[Config UDPApps]
#extends=OneD2DPair

**.ue*[*].numUdpApps = 1

**.ueD2DTx[*].udpApp[0].typename = "UDPBasicApp"
**.ueD2DTx[*].udpApp[0].destAddresses = "ueD2DRx["+string(ancestorIndex(0))+"]"
**.ueD2DTx[*].udpApp[0].destPort = 1000
**.ueD2DTx[*].udpApp[0].sendInterval = exponential(0.1s)
**.ueD2DTx[*].udpApp[0].messageLength = 1024B

**.ueD2DRx[*].udpApp[0].typename = "UDPSink"
**.ueD2DRx[*].udpApp[0].localPort = 1000


[Config OneD2DPair]
extends=UDPApps
*.numUeCell = 0
*.numUeD2DTx = 1
*.numUeD2DRx = 1

# eNodeB.
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

# UEs.
*.ue*[0].macCellId = 1
*.ue*[0].masterId = 1
*.ue*[0].mobility.initFromDisplayString = false

*.ueD2DTx[0].mobility.initialX = 150m
*.ueD2DTx[0].mobility.initialY = 350m
*.ueD2DRx[0].mobility.initialX = 50m
*.ueD2DRx[0].mobility.initialY = 350m

*.ue*[*].nic.phy.ueTxPower = 26   # UL Tx Power (in dB)
*.ue*[*].nic.phy.d2dTxPower = 24.14973348 # 10*LOG10(260)


[Config TwoD2DPairs]
extends=UDPApps
*.numUeCell = 0
*.numUeD2DTx = 2
*.numUeD2DRx = 2

# eNodeB.
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m

# UEs.
*.ue*[*].macCellId = 1
*.ue*[*].masterId = 1
*.ue*[*].mobility.initFromDisplayString = false

*.ueD2DTx[0].mobility.initialX = 150m
*.ueD2DTx[0].mobility.initialY = 350m
*.ueD2DTx[1].mobility.initialX = 250m
*.ueD2DTx[1].mobility.initialY = 350m

*.ueD2DRx[0].mobility.initialX = 150m
*.ueD2DRx[0].mobility.initialY = 450m
*.ueD2DRx[1].mobility.initialX = 250m
*.ueD2DRx[1].mobility.initialY = 450m

*.ue*[*].nic.phy.ueTxPower = 26   # UL Tx Power (in dB)
*.ueD2DTx[0].nic.phy.d2dTxPower = 24.14973348 # 10*LOG10(260)
*.ueD2DTx[1].nic.phy.d2dTxPower = 24.14973348 # 10*LOG10(260)
*.ueD2DRx[0].nic.phy.d2dTxPower = 24.14973348 # 10*LOG10(260)
*.ueD2DRx[1].nic.phy.d2dTxPower = 24.14973348 # 10*LOG10(260)


[Config Cellular]
extends=UDPApps

# Disable D2D for the eNodeB and the UEs
**.eNodeB.d2dCapable = false
**.ueD2D*[0].d2dCapable = false
**.amcMode = "AUTO"


[Config D2D]
extends=TwoD2DPairs

# Enable D2D.
**.eNodeB.d2dCapable = true
**.ueD2D*[0].d2dCapable = true
**.amcMode = "D2D"

**.ueD2DTx[0].nic.d2dPeerAddresses = "ueD2DRx[0]"
**.ueD2DRx[0].nic.d2dPeerAddresses = "ueD2DTx[0]"

**.eNodeB.nic.phy.enableD2DCqiReporting = true # false -> out_of_range error.
**.usePreconfiguredTxParams = false # true -> undefined runtime error
**.d2dCqi = 7
*.eNodeB.nic.d2dModeSelection = true
*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionBestCqi"
