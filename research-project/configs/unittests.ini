include base.ini

[Config Test-CellularFirst]
extends=Base
*.numUeCellPairs = 1 
*.numUeD2DPairs = 1
**.deployer.numRbDl = 2
**.deployer.numRbUl = 2
**.numBands = 2
**.omniscientEntity.recordBandAllocation = true
**.omniscientEntity.historyFilename = "scheduling_history_${configname}"
**.omniscientEntity.considerTerminateFlag = false

*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionForcedD2D"
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"


[Config Test-Reassignment]
extends=Base
*.numUeCellPairs = 1 
*.numUeD2DPairs = 1
**.deployer.numRbDl = 1
**.deployer.numRbUl = 1
**.numBands = 1
**.omniscientEntity.recordBandAllocation = true
**.omniscientEntity.historyFilename = "scheduling_history_${configname}"
**.omniscientEntity.considerTerminateFlag = false

*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionForcedD2D"
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"


[Config Test-Sorting]
extends=Base
*.numUeCellPairs = 3
*.numUeD2DPairs = 0
**.deployer.numRbDl = 3
**.deployer.numRbUl = 3
**.numBands = 3
**.omniscientEntity.recordBandAllocation = true
**.omniscientEntity.historyFilename = "scheduling_history_${configname}"
**.omniscientEntity.considerTerminateFlag = false

*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionForcedD2D"
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"

**.eNodeB.mobility.initialX = 90m
**.eNodeB.mobility.initialY = 90m

**.ueCellTx[0].mobility.initialX = 100m
**.ueCellTx[0].mobility.initialY = 100m
**.ueCellRx[0].mobility.initialX = 110m
**.ueCellRx[0].mobility.initialY = 100m

**.ueCellTx[1].mobility.initialX = 200m
**.ueCellTx[1].mobility.initialY = 200m
**.ueCellRx[1].mobility.initialX = 250m
**.ueCellRx[1].mobility.initialY = 200m

**.ueCellTx[2].mobility.initialX = 300m
**.ueCellTx[2].mobility.initialY = 300m
**.ueCellRx[2].mobility.initialX = 400m
**.ueCellRx[2].mobility.initialY = 300m


[Config Test-Sorting-D2D]
extends=Base
*.numUeCellPairs = 0
*.numUeD2DPairs = 3
**.deployer.numRbDl = 3
**.deployer.numRbUl = 3
**.numBands = 3
**.omniscientEntity.recordBandAllocation = true
**.omniscientEntity.historyFilename = "scheduling_history_${configname}"
**.omniscientEntity.considerTerminateFlag = false

*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionForcedD2D"
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"

**.eNodeB.mobility.initialX = 90m
**.eNodeB.mobility.initialY = 90m

**.ueD2DTx[0].mobility.initialX = 100m
**.ueD2DTx[0].mobility.initialY = 100m
**.ueD2DRx[0].mobility.initialX = 110m
**.ueD2DRx[0].mobility.initialY = 100m

**.ueD2DTx[1].mobility.initialX = 200m
**.ueD2DTx[1].mobility.initialY = 200m
**.ueD2DRx[1].mobility.initialX = 250m
**.ueD2DRx[1].mobility.initialY = 200m

**.ueD2DTx[2].mobility.initialX = 300m
**.ueD2DTx[2].mobility.initialY = 300m
**.ueD2DRx[2].mobility.initialX = 400m
**.ueD2DRx[2].mobility.initialY = 300m


[Config Test-SINR]
# This unit test exists so you can check that the SINR computation is correct.
# The omniscient entity prints all (UE, eNodeB) SINR values upon configuration.
# Grep them using: 
# grep --text "and has a mean SINR to the eNB of" lastrun.log
extends=Base
*.numUeCellPairs = 5
*.numUeD2DPairs = 0
**.deployer.numRbDl = 1 
**.deployer.numRbUl = 1
**.numBands = 1
**.omniscientEntity.recordBandAllocation = false
**.omniscientEntity.historyFilename = "scheduling_history_${configname}"
**.omniscientEntity.considerTerminateFlag = false

*.eNodeB.nic.d2dModeSelectionType = "D2DModeSelectionForcedD2D"
**.schedulingDisciplineDl = "MAX_DATARATE"
**.schedulingDisciplineUl = "MAX_DATARATE"

**.eNodeB.mobility.initialX = 100m
**.eNodeB.mobility.initialY = 100m

**.ueCellTx[0].mobility.initialX = 150m
**.ueCellTx[0].mobility.initialY = 100m
**.ueCellTx[1].mobility.initialX = 200m
**.ueCellTx[1].mobility.initialY = 100m
**.ueCellTx[2].mobility.initialX = 300m
**.ueCellTx[2].mobility.initialY = 100m
**.ueCellTx[3].mobility.initialX = 400m
**.ueCellTx[3].mobility.initialY = 100m
**.ueCellTx[4].mobility.initialX = 500m
**.ueCellTx[4].mobility.initialY = 100m
**.ueCellRx[0].mobility.initialX = 600m
**.ueCellRx[0].mobility.initialY = 100m
**.ueCellRx[1].mobility.initialX = 1100m
**.ueCellRx[1].mobility.initialY = 100m
**.ueCellRx[2].mobility.initialX = 1600m
**.ueCellRx[2].mobility.initialY = 100m
**.ueCellRx[3].mobility.initialX = 2100m
**.ueCellRx[3].mobility.initialY = 100m
**.ueCellRx[4].mobility.initialX = 2600m
**.ueCellRx[4].mobility.initialY = 100m